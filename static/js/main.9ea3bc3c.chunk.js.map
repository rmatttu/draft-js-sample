{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","compositeDecorator","CompositeDecorator","strategy","handleStrategy","component","HandleSpan","hashtagStrategy","HashtagSpan","state","editorState","EditorState","createEmpty","this","setState","command","console","log","newState","RichUtils","handleKeyCommand","onChange","toggleBlockType","src","logo","className","alt","bind","React","Component","HANDLE_REGEX","HASHTAG_REGEX","HandleStyle","backgroundColor","HashtagStyle","contentBlock","callback","contentState","findWithRegex","regex","matchArr","start","text","getText","exec","index","length","style","data-offset-key","offsetKey","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,MAA0B,iC,uBCMpBA,E,kDACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAER,IAAMC,EAAqB,IAAIC,qBAAmB,CACjD,CACCC,SAAUC,EACVC,UAAWC,GAEZ,CACCH,SAAUI,EACVF,UAAWG,KAVM,OAajB,EAAKC,MAAQ,CACXC,YAAaC,cAAYC,YAAYX,IAdtB,E,4CAkBnB,SAASS,GACPG,KAAKC,SAAS,CAACJ,kB,8BAElB,SAAiBK,GACdC,QAAQC,IAAIF,GACd,IAAMG,EAAWC,YAAUC,iBAAiBP,KAAKJ,MAAMC,YAAaK,GACnE,QAAIG,IACHL,KAAKQ,SAASH,GACVC,YAAUG,gBAAgBT,KAAKJ,MAAMC,YAAa,eAC9C,K,oBAKV,WACE,OAAO,gCACP,kDACA,qBAAKa,IAAKC,EAAMC,UAAU,WAAWC,IAAI,SACvC,cAAC,SAAD,CACEhB,YAAaG,KAAKJ,MAAMC,YACxBW,SAAUR,KAAKQ,SAASM,KAAKd,MAC7BO,iBAAkBP,KAAKO,iBAAiBO,KAAKd,e,GAxCpBe,IAAMC,WAoDjCC,EAAe,UACfC,EAAgB,uBAEhBC,EAAc,CACnBC,gBAAgB,WAGXC,EAAe,CACpBD,gBAAgB,WAGjB,SAAS7B,EAAe+B,EAAcC,EAAUC,GAC/CC,EAAcR,EAAcK,EAAcC,GAG3C,SAAS7B,EAAgB4B,EAAcC,EAAUC,GAChDC,EAAcP,EAAeI,EAAcC,GAG5C,SAASE,EAAcC,EAAOJ,EAAcC,GAG3C,IAFA,IACII,EAAUC,EADRC,EAAOP,EAAaQ,UAEe,QAAjCH,EAAWD,EAAMK,KAAKF,KAE7BN,EADAK,EAAQD,EAASK,MACDJ,EAAQD,EAAS,GAAGM,QAItC,IAAMxC,EAAa,SAACN,GAEnB,OADAgB,QAAQC,IAAI,kCAEX,sBACI8B,MAAOf,EACVgB,kBAAiBhD,EAAMiD,UAFxB,SAIEjD,EAAMkD,YAKJ1C,EAAc,SAACR,GAEpB,OADAgB,QAAQC,IAAI,wCAEX,sBACI8B,MAAOb,EACVc,kBAAiBhD,EAAMiD,UAFxB,SAIEjD,EAAMkD,YC7FKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9ea3bc3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport {Editor, EditorState, RichUtils, CompositeDecorator} from 'draft-js';\nimport logo from './logo.svg';\nimport './App.css';\nimport './component.css'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n\n\t\tconst compositeDecorator = new CompositeDecorator([\n\t\t\t{\n\t\t\t\tstrategy: handleStrategy,\n\t\t\t\tcomponent: HandleSpan,\n\t\t\t},\n\t\t\t{\n\t\t\t\tstrategy: hashtagStrategy,\n\t\t\t\tcomponent: HashtagSpan,\n\t\t\t},\n\t\t]);\n    this.state = {\n      editorState: EditorState.createEmpty(compositeDecorator),\n    }\n  }\n\n  onChange(editorState) {\n    this.setState({editorState})\n  }\n\thandleKeyCommand(command) {\n    console.log(command)\n\t\tconst newState = RichUtils.handleKeyCommand(this.state.editorState, command)\n\t\t\tif (newState) {\n\t\t\t\tthis.onChange(newState)\n        RichUtils.toggleBlockType(this.state.editorState, 'header-two')\n\t\t\t\t\treturn true\n\t\t\t}\n\t\treturn false\n\t}\n\n  render() {\n    return <div>\n    <h1>Draft.js example</h1>\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <Editor\n        editorState={this.state.editorState}\n        onChange={this.onChange.bind(this)}\n        handleKeyCommand={this.handleKeyCommand.bind(this)}\n      />\n    </div>\n  }\n\n\n}\n\n/**\n * Super simple decorators for handles and hashtags, for demonstration\n * purposes only. Don't reuse these regexes.\n */\nconst HANDLE_REGEX = /@[\\w]+/g;\nconst HASHTAG_REGEX = /#[\\w\\u0590-\\u05ff]+/g;\n\nconst HandleStyle = {\n\tbackgroundColor:\"#FFCACA\"\n};\n\nconst HashtagStyle = {\n\tbackgroundColor:\"#FFE564\"\n};\n\nfunction handleStrategy(contentBlock, callback, contentState) {\n\tfindWithRegex(HANDLE_REGEX, contentBlock, callback);\n}\n\nfunction hashtagStrategy(contentBlock, callback, contentState) {\n\tfindWithRegex(HASHTAG_REGEX, contentBlock, callback);\n}\n\nfunction findWithRegex(regex, contentBlock, callback) {\n\tconst text = contentBlock.getText();\n\tlet matchArr, start;\n\twhile ((matchArr = regex.exec(text)) !== null) {\n\t\tstart = matchArr.index;\n\t\tcallback(start, start + matchArr[0].length);\n\t}\n}\n\nconst HandleSpan = (props) => {\n\tconsole.log(\"メンション\")\n\treturn (\n\t\t<span\n      style={HandleStyle}\n\t\t\tdata-offset-key={props.offsetKey}\n\t\t>\n\t\t\t{props.children}\n\t\t</span>\n\t);\n};\n\nconst HashtagSpan = (props) => {\n\tconsole.log(\"ハッシュダグ\")\n\treturn (\n\t\t<span\n      style={HashtagStyle}\n\t\t\tdata-offset-key={props.offsetKey}\n\t\t>\n\t\t\t{props.children}\n\t\t</span>\n\t);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}